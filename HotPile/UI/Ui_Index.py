# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\HotPile\UI\Index.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget,QDialog
# from UI.Ui_PileSelectTable import Ui_PileSelectTable
# from UI.Ui_ReGuanSelect import Ui_ReGuanSelect
# from UI.Ui_ProductCheckTable import Ui_ProductCheckTable
# from UI.Ui_ProductCheck import Ui_ProductCheck
from UI.Ui_About import Ui_Dialog
from UI.Ui_Logo import LOGO
from UI.Ui_ProductSelect.ProductSelect import Ui_ProductSelect
from UI.Ui_ProductCheck.ProductCheck import Ui_ProductCheck
from UI.Ui_ProductCheck.ProductCheck import Ui_ProductCheck
from UI.Ui_ProductMgr.ProductMgr import Ui_ProductMgr
from UI.Ui_DensityMgr.DensityMgr import Ui_DensityMgr
from UI.Ui_CanshuChuxuan.CanshuChuxuan import Ui_CanshuChuxuan
from UI.Ui_XiangxiPinggu.XiangxiPinggu import Ui_XiangxiPinggu
import gl 



from Tools import ProductSelect
from res import picres_rc


class Ui_mainWindow(object):
    def __init__(self,_IsGm) -> None:
        super().__init__()
        self.IsGm=_IsGm #是否是管理员 0否 1是


    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(1920*gl.w, 1080*gl.h)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/logo.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainWindow.setWindowIcon(icon)
        # 创建页面组来管理
        self.Pages={}
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.LOGO=LOGO(mainWindow)
        self.LOGO.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.LOGO.show()
        self.ProductSelect=Ui_ProductSelect(mainWindow)
        self.ProductSelect.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.ProductSelect.hide()
        self.ProductCheck=Ui_ProductCheck(mainWindow)
        self.ProductCheck.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.ProductCheck.hide()
        self.ProductMgr=Ui_ProductMgr(mainWindow)
        self.ProductMgr.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.ProductMgr.hide()
        self.DensityMgr=Ui_DensityMgr(mainWindow)
        self.DensityMgr.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.DensityMgr.hide()
        self.CanshuChuxuan=Ui_CanshuChuxuan(mainWindow)
        self.CanshuChuxuan.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.CanshuChuxuan.hide()
        self.XiangxiPinggu=Ui_XiangxiPinggu(mainWindow)
        self.XiangxiPinggu.setGeometry(QtCore.QRect(0, 0, 1800*gl.w, 1000*gl.h))
        self.XiangxiPinggu.hide()
        # self.ProductSelect.setGeometry(QtCore.QRect(0, 0, 1800, 1000))
        # self.ProductSelect.show()
        # self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        # self.gridLayout.setObjectName("gridLayout")
        # self.LOGO= LOGO()
        # self.gridLayout.addWidget(self.LOGO, 0, 0, 1, 1)
        # self.PileSelectTable = PileSelectTable()
        # self.ReGuanSelect = ReGuanSelect()
        # self.ProductCheckTable = ProductCheckTable()
        # self.ProductCheck = ProductCheck()
        # self.ReGuanSelect.setMaximumSize(QtCore.QSize(500, 16777215))
        # self.ReGuanSelect.mySignal.connect(self.getShangxuanSignal)
        # oPileSelectData=self.InitPileSelectData()
        # oPileSelectTableData=self.InitPileSelectTableData()
        # self.ReGuanSelect.Refreash(oPileSelectData)
        # self.PileSelectTable.Refreash(oPileSelectTableData)
        # self.gridLayout.addWidget(self.ReGuanSelect, 0, 0, 1, 1)
        # self.gridLayout.addWidget(self.PileSelectTable, 0, 1, 1, 1)
        self.Pages[0]=self.LOGO
        self.Pages[1]=self.ProductSelect
        self.Pages[2]=self.ProductCheck
        self.Pages[3]=self.ProductMgr
        self.Pages[4]=self.DensityMgr
        self.Pages[5]=self.CanshuChuxuan
        self.Pages[6]=self.XiangxiPinggu
        mainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1109*gl.w, 23*gl.h))
        self.menubar.setObjectName("menubar")
        self.CaoDao = QtWidgets.QMenu(self.menubar)
        self.CaoDao.setObjectName("CaoDao")
        self.HuanLuReGuan = QtWidgets.QMenu(self.menubar)
        self.HuanLuReGuan.setEnabled(False)
        self.HuanLuReGuan.setObjectName("HuanLuReGuan")
        self.LiuTiHuiLu = QtWidgets.QMenu(self.menubar)
        self.LiuTiHuiLu.setEnabled(False)
        self.LiuTiHuiLu.setObjectName("LiuTiHuiLu")
        self.ErYuanZhuangzhi = QtWidgets.QMenu(self.menubar)
        self.ErYuanZhuangzhi.setObjectName("ErYuanZhuangzhi")
        self.About = QtWidgets.QMenu(self.menubar)
        self.About.setObjectName("About")
        if self.IsGm==1:
            self.SysSetting(mainWindow)
        # if self.IsGm==1:
        #     self.SysSetting = QtWidgets.QMenu(self.menubar)
        #     self.SysSetting.setObjectName("SysSetting")
        #     self.actionProduct = QtWidgets.QAction(mainWindow)
        #     self.actionProduct.setObjectName("actionProduct")
        #     self.actioncanshu = QtWidgets.QAction(mainWindow)
        #     self.actioncanshu.setObjectName("actioncanshu")
        #     self.SysSetting.addAction(self.actionProduct)
        #     self.SysSetting.addAction(self.actioncanshu)
        mainWindow.setMenuBar(self.menubar)
        self.action_2 = QtWidgets.QAction(mainWindow)
        self.action_2.setObjectName("action_2")
        self.action = QtWidgets.QAction(mainWindow)
        self.action.setObjectName("action")
        self.ReGuanXuanXin = QtWidgets.QAction(mainWindow)
        self.ReGuanXuanXin.setObjectName("ReGuanXuanXin")
        self.ChangPingJiaoHe = QtWidgets.QAction(mainWindow)
        self.ChangPingJiaoHe.setObjectName("ChangPingJiaoHe")     
        self.canshuchuxuan = QtWidgets.QAction(mainWindow)
        self.canshuchuxuan.setObjectName("canshuchuxuan")    
        self.xiangxipinggu = QtWidgets.QAction(mainWindow)
        self.xiangxipinggu.setObjectName("xiangxipinggu")      
        self.CaoDao.addAction(self.ReGuanXuanXin)
        self.CaoDao.addAction(self.ChangPingJiaoHe)
        self.ErYuanZhuangzhi.addAction(self.canshuchuxuan)
        self.ErYuanZhuangzhi.addAction(self.xiangxipinggu)
        self.menubar.addAction(self.CaoDao.menuAction())
        self.menubar.addAction(self.HuanLuReGuan.menuAction())
        self.menubar.addAction(self.LiuTiHuiLu.menuAction())
        self.menubar.addAction(self.ErYuanZhuangzhi.menuAction())
        if self.IsGm==1:
            self.menubar.addAction(self.SysSetting.menuAction())
        self.menubar.addAction(self.About.menuAction())
        self.child = QDialog()
        self.child_ui = Ui_Dialog()
        self.child_ui.setupUi(self.child)
        self.retranslateUi(mainWindow)
        self.About.aboutToShow.connect(lambda:self.child.show())
        self.iflag=0
        self.ReGuanXuanXin.triggered.connect(lambda: self.JumpToPage(1))
        self.ChangPingJiaoHe.triggered.connect(lambda: self.JumpToPage(2))
        self.canshuchuxuan.triggered.connect(lambda: self.JumpToPage(5))
        self.xiangxipinggu.triggered.connect(lambda: self.JumpToPage(6))
        # self.actionProduct.triggered.connect(self.JumpToPProductMgr)
        # self.actioncanshu.triggered.connect(self.JumpToDensityMgr)
        # if self.IsGm==1:
        #     self.SysSetting(mainWindow)
        
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "热控产品选型软件"))
        self.CaoDao.setTitle(_translate("mainWindow", "槽道热管"))
        self.ErYuanZhuangzhi.setTitle(_translate("mainWindow", "二元装置"))
        self.HuanLuReGuan.setTitle(_translate("mainWindow", "环路热管"))
        self.LiuTiHuiLu.setTitle(_translate("mainWindow", "流体回路"))
        self.About.setTitle(_translate("mainWindow", "关于"))
        # self.SysSetting.setTitle(_translate("mainWindow", "系统设置"))
        self.action_2.setText(_translate("mainWindow", "产品校核"))
        self.action.setText(_translate("mainWindow", "产品校核"))
        self.ReGuanXuanXin.setText(_translate("mainWindow", "热管选型"))
        self.ChangPingJiaoHe.setText(_translate("mainWindow", "产品校核"))
        self.canshuchuxuan.setText(_translate("mainWindow", "参数初选"))
        self.xiangxipinggu.setText(_translate("mainWindow", "详细评估"))
    
    def SysSetting(self,mainWindow):
        self.SysSetting = QtWidgets.QMenu(self.menubar)
        self.SysSetting.setObjectName("SysSetting")
        self.actionProduct = QtWidgets.QAction(mainWindow)
        self.actionProduct.setObjectName("actionProduct")
        self.actioncanshu = QtWidgets.QAction(mainWindow)
        self.actioncanshu.setObjectName("actioncanshu")
        self.SysSetting.addAction(self.actionProduct)
        self.SysSetting.addAction(self.actioncanshu)
        # self.menubar.addAction(self.SysSetting.menuAction())
        self.actionProduct.triggered.connect(lambda: self.JumpToPage(3))
        self.actioncanshu.triggered.connect(lambda: self.JumpToPage(4))
        self.SysSetting.setTitle("系统设置")
        self.actionProduct.setText( "产品信息")
        self.actioncanshu.setText("密度参数")


    def JumpToPage(self,pageid):
        print(pageid)
        if self.iflag==pageid:
            return
        else:
            for key in self.Pages.keys():
                if key==pageid:
                    self.Pages[key].show()
                else:
                    self.Pages[key].hide()
        self.iflag=pageid
    # def getShangxuanSignal(self,connect,icode):
    #     #从热管选型界面发送过来的消息，需解析区分
    #     dic=eval(connect)
    #     #热源数目
    #     if icode==2:
    #         self.PileSelectTable.freshenReRanPic(dic["renrannum"])
    #     #删选按钮，用来过滤产品列表
    #     if icode==1:
    #         #将筛选信息传递到“液赛查看”
    #         self.PileSelectTable.GetParaFromFatherFrom(connect)
    #         # print(connect)
    #         pass
    
    # def InitPileSelectData(self):
    #     oData={}
    #     oData["reliumidu"]=1.2
    #     oData["type"]="外贴"
    #     oData["rongcha"]=10
    #     oData["weight"]=12
    #     oData["hightemp"]=40
    #     oData["lowtemp"]=10
    #     oData["edingtemp"]=20
    #     oData["chongzhuangtemp"]=25
    #     oData["wanqunum"]=0
    #     oData["tabledata"]=[]
    #     item={}
    #     item["reyuan"]="热源1"
    #     item["gonglv"]=0
    #     item["juli"]=100
    #     oData["tabledata"].append(item)
    #     return oData

    # def InitPileSelectTableData(self):
    #     ProductSelect.GetDensityInfo()
    #     return ProductSelect.GetProductInfo()
        # oData=[]
        # for i in range(6):
        #     item={}
        #     item["name"]="产品"+str(i+1)
        #     item["id"]="007"
        #     item["ishape"]="007"
        #     item["ithick"]=10
        #     item["iusetype"]="预埋"
        #     item["wanqu"]=2
        #     item["handhot"]=200
        #     item["prehandhot"]=50
        #     item["weight"]=32
        #     item["yesai"]=32
        #     item["kongnum"]=2
        #     oData.append(item)
        # return oData



# class PileSelectTable(QWidget, Ui_PileSelectTable):
#     def __init__(self):
#         super(PileSelectTable,self).__init__()
#         # 子窗口初始化时实现子窗口布局
#         self.setupUi(self)
 
#         # 设置子窗体最小尺寸
#         self.setMinimumWidth(30)
#         self.setMinimumHeight(30)

# class ReGuanSelect(QWidget, Ui_ReGuanSelect):
#     def __init__(self):
#         super(ReGuanSelect,self).__init__()
#         # 子窗口初始化时实现子窗口布局
#         self.setupUi(self)
 
#         # 设置子窗体最小尺寸
#         self.setMinimumWidth(30)
#         self.setMinimumHeight(30)

# class ProductCheckTable(QWidget, Ui_ProductCheckTable):
#     def __init__(self):
#         super(ProductCheckTable,self).__init__()
#         # 子窗口初始化时实现子窗口布局
#         self.setupUi(self)
 
#         # 设置子窗体最小尺寸
#         self.setMinimumWidth(30)
#         self.setMinimumHeight(30)

# class ProductCheck(QWidget, Ui_ProductCheck):
#     def __init__(self):
#         super(ProductCheck,self).__init__()
#         # 子窗口初始化时实现子窗口布局
#         self.setupUi(self)
 
#         # 设置子窗体最小尺寸
#         self.setMinimumWidth(30)
#         self.setMinimumHeight(30)

# class LOGO(QWidget, Ui_Logo):
#     def __init__(self):
#         super(LOGO,self).__init__()
#         # 子窗口初始化时实现子窗口布局
#         self.setupUi(self)
 
#         # 设置子窗体最小尺寸
#         self.setMinimumWidth(30)
#         self.setMinimumHeight(30)